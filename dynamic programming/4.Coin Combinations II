// https://cses.fi/problemset/task/1636



#include <bits/stdc++.h>
using namespace std;
 
const int mod = 1e9 + 7;
vector<vector<int>> dp;
int solve(vector<int>&a,int pos,int x){
  if(pos >= a.size()){
    return x==0;
  }
  else if(x < 0) return 0;
  else if(dp[pos][x] != -1)
    return dp[pos][x];
 
  int left = solve(a,pos,x-a[pos]);
  int right = solve(a,pos+1,x);
  return dp[pos][x] = left + right;
}
int main() {
  int n,x; cin>>n>>x;
  vector<int> a(n);
 
  // dp.assign(n+1,vector<int>(x+1,-1));
  for(auto &x : a) cin>>x;
  // cout<<solve(a,0,x);
 
  vector<vector<int>> dp(n+1,vector<int>(x+1,0));
  dp[0][0] = 1;
 
  // for(int i=0; i<=n; i++) dp[i][0] = 1;
  for(int i=1; i<=n; i++){
    for(int j=0; j<=x; j++){
      dp[i][j] = dp[i-1][j];
      int left = j - a[i-1];
      if(left >=0)
        dp[i][j] += dp[i][j-a[i-1]];
        dp[i][j] %=mod;
    }
  }
 
  cout<<dp[n][x];
  return 0;
}
