 // https://cses.fi/problemset/task/1745
 
 #include<bits/stdc++.h>
using namespace std;
 
 
// vector<vector<int>> dp;
// int solve(vector<int>&v,int n,int s){
//   if(s == 0) return dp[n][s] = 1;
//   if(n == 0) return dp[n][s] = 0;
//   else if(dp[n][s] != -1)
//     return dp[n][s];
  
//   if(s>=v[n-1]){
//     return dp[n][s] = solve(v,n-1,s-v[n-1])|solve(v,n-1,s);
//   }
//   else{
//     return dp[n][s] = solve(v,n-1,s);
//   }
// }
int main(){
  int n; cin>>n;
  vector<int> v(n,0);
 
  int s = 0;
  for(int i=0; i< n; i++){
    cin>>v[i];
    s += v[i];
  }
 
  // dp.assign(n+1,vector<int>(s+1,-1));
  // cout<<solve(v,n,s)<<endl<<endl;
  // for(int i=0; i<=n; i++){
  //   for(int j=0; j<=s; j++){
  //     cout<<dp[i][j]<<" ";
  //   }
  //   cout<<endl;
  // }
 
 
   
  vector<vector<int>> dp(n+1,vector<int>(s+1,0));
  dp[0][0] = 1;
  for(int i=1; i<=n; i++){
    for(int j=0; j<=s; j++){
      if(j==0){
        dp[i][j] = 1;
      }
      else{
        if(j - v[i-1] >=0){
          dp[i][j] = dp[i-1][j] | dp[i-1][j-v[i-1]];
        }
        else{
          dp[i][j] = dp[i-1][j];
        }
      }
    }
  }
  vector<int> d;
  for(int i=1; i<=s; i++){
    if(dp[n][i]==1)
      d.push_back(i);
  }
 
  cout<<d.size()<<endl;
  for(auto x : d){
    cout<<x<<" ";
  }
  return 0;
}

